<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bee.passport.mapper.UserMapper">
    <!--auto generated Code-->
    <resultMap id="AllColumnMap" type="com.bee.passport.api.entity.User">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="mobile" property="mobile"/>
        <result column="account_id" property="accountId"/>
        <result column="open_account_time" property="openAccountTime"/>
        <result column="is_novice" property="isNovice"/>
        <result column="referee_id" property="refereeId"/>
        <result column="lock_status" property="lockStatus"/>
        <result column="status" property="status"/>
        <result column="role" property="role"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="all_column">
        `id`,
        `name`,
        `password`,
        `mobile`,
        `account_id`,
        `open_account_time`,
        `is_novice`,
        `referee_id`,
        `lock_status`,
        `status`,
        `role`,
        `last_login_time`,
        `state`,
        `create_time`,
        `update_time`
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="entity.id">
        INSERT INTO t_user (
        `id`,
        `name`,
        `password`,
        `mobile`,
        `account_id`,
        `open_account_time`,
        `is_novice`,
        `referee_id`,
        `lock_status`,
        `status`,
        `role`,
        `last_login_time`,
        `state`,
        `create_time`,
        `update_time`
        ) VALUES (
        #{entity.id},
        #{entity.name},
        #{entity.password},
        #{entity.mobile},
        #{entity.accountId},
        #{entity.openAccountTime},
        #{entity.isNovice},
        #{entity.refereeId},
        #{entity.lockStatus},
        #{entity.status},
        #{entity.role},
        #{entity.lastLoginTime},
        #{entity.state},
        #{entity.createTime},
        #{entity.updateTime}
        )
    </insert>

    <!--auto generated Code-->
    <insert id="insertList">
        INSERT INTO t_user (
        <include refid="all_column"/>
        )VALUES
        <foreach collection="entities" item="entity" index="index" separator=",">
            (
            #{entity.id},
            #{entity.name},
            #{entity.password},
            #{entity.mobile},
            #{entity.accountId},
            #{entity.openAccountTime},
            #{entity.isNovice},
            #{entity.refereeId},
            #{entity.lockStatus},
            #{entity.status},
            #{entity.role},
            #{entity.lastLoginTime},
            #{entity.state},
            #{entity.createTime},
            #{entity.updateTime}
            )
        </foreach>
    </insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE t_user
        <set>
            <if test="entity.name != null"> `name` = #{entity.name}, </if>
            <if test="entity.password != null"> `password` = #{entity.password}, </if>
            <if test="entity.mobile != null"> `mobile` = #{entity.mobile}, </if>
            <if test="entity.accountId != null"> `account_id` = #{entity.accountId}, </if>
            <if test="entity.openAccountTime != null"> `open_account_time` = #{entity.openAccountTime} </if>
            <if test="entity.isNovice != null"> `is_novice` = #{entity.isNovice} </if>
            <if test="entity.refereeId != null"> `referee_id` = #{entity.refereeId} </if>
            <if test="entity.lockStatus != null"> `lock_status` = #{entity.lockStatus} </if>
            <if test="entity.status != null"> `status` = #{entity.status} </if>
            <if test="entity.role != null"> `role` = #{entity.role} </if>
            <if test="entity.lastLoginTime != null"> `last_login_time` = #{entity.lastLoginTime} </if>
            <if test="entity.state != null"> `state` = #{entity.state} </if>
            <if test="entity.createTime != null"> `create_time` = #{entity.createTime} </if>
            <if test="entity.updateTime != null"> `update_time` = #{entity.updateTime} </if>
        </set>
        WHERE id = #{entity.id}
    </update>

    <select id="queryOne" resultMap="AllColumnMap">
        SELECT * FROM t_user WHERE state = 1
        <if test="param.id != null"> `id` = #{param.id}, </if>
        <if test="param.name != null"> `name` = #{param.name}, </if>
        <if test="param.mobile != null"> `mobile` = #{param.mobile}, </if>
        <if test="param.accountId != null"> `account_id` = #{param.accountId}, </if>
        <if test="param.openAccountTime != null"> `open_account_time` = #{param.openAccountTime} </if>
        <if test="param.isNovice != null"> `is_novice` = #{param.isNovice} </if>
        <if test="param.refereeId != null"> `referee_id` = #{param.refereeId} </if>
        <if test="param.lockStatus != null"> `lock_status` = #{param.lockStatus} </if>
        <if test="param.status != null"> `status` = #{param.status} </if>
        <if test="param.role != null"> `role` = #{param.role} </if>
        <if test="param.lastLoginTime != null"> `last_login_time` = #{param.lastLoginTime} </if>
        <if test="param.createTime != null"> `create_time` = #{param.createTime} </if>
        LIMIT 1
    </select>

    <select id="queryList" resultMap="AllColumnMap" >
        SELECT * FROM t_user WHERE state = 1
        <if test="param.name != null"> `name` = #{param.name}, </if>
        <if test="param.mobile != null"> `mobile` = #{param.mobile}, </if>
        <if test="param.accountId != null"> `account_id` = #{param.accountId}, </if>
        <if test="param.openAccountTime != null"> `open_account_time` = #{param.openAccountTime} </if>
        <if test="param.isNovice != null"> `is_novice` = #{param.isNovice} </if>
        <if test="param.refereeId != null"> `referee_id` = #{param.refereeId} </if>
        <if test="param.lockStatus != null"> `lock_status` = #{param.lockStatus} </if>
        <if test="param.status != null"> `status` = #{param.status} </if>
        <if test="param.role != null"> `role` = #{param.role} </if>
        <if test="param.lastLoginTime != null"> `last_login_time` = #{param.lastLoginTime} </if>
        <if test="param.createTime != null"> `create_time` = #{param.createTime} </if>
        <if test="statusList != null">
            and `status` in
            <foreach collection="param.statusList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="param.sortList != null">
            order by
            <foreach collection="param.sortList" index="index" item="item" separator=",">
                ${item}
            </foreach>
        </if>
        <if test="param.start != null and param.pageSize != null">
            LIMIT #{param.start}, #{param.pageSize}
        </if>
    </select>

    <select id="count" resultMap="AllColumnMap" >
        SELECT  IFNULL(count(1), 0) FROM t_user WHERE state = 1
        <if test="param.name != null"> `name` = #{param.name}, </if>
        <if test="param.mobile != null"> `mobile` = #{param.mobile}, </if>
        <if test="param.accountId != null"> `account_id` = #{param.accountId}, </if>
        <if test="param.openAccountTime != null"> `open_account_time` = #{param.openAccountTime} </if>
        <if test="param.isNovice != null"> `is_novice` = #{param.isNovice} </if>
        <if test="param.refereeId != null"> `referee_id` = #{param.refereeId} </if>
        <if test="param.lockStatus != null"> `lock_status` = #{param.lockStatus} </if>
        <if test="param.status != null"> `status` = #{param.status} </if>
        <if test="param.role != null"> `role` = #{param.role} </if>
        <if test="param.lastLoginTime != null"> `last_login_time` = #{param.lastLoginTime} </if>
        <if test="param.createTime != null"> `create_time` = #{param.createTime} </if>
        <if test="statusList != null">
            and `status` in
            <foreach collection="param.statusList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

</mapper>

